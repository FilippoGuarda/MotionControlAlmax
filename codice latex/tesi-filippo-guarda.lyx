#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass deistesi
\use_default_options false
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\float_placement H
\paperfontsize 12
\spacing onehalf
\use_hyperref true
\pdf_title "Motion Control Almax"
\pdf_author "Filippo Guarda"
\pdf_subject "motion control of a bldc motor"
\pdf_keywords "motion control, ROS, CANopen, AlmaX, rover, BLDC motor"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Indice
\shortcut idx
\color #008000
\end_index
\leftmargin 17page%
\topmargin 12pheight%
\rightmargin 8page%
\bottommargin 12pheight%
\secnumdepth 4
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle plain
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout 1. Facolta
Ingegneria
\end_layout

\begin_layout 2.a Corso di laurea
Ingegneria dell'Automazione
\end_layout

\begin_layout 3. Titolo
Analisi di soluzioni di motion control per azionamenti BLDC nel progetto
 AlmaX
\end_layout

\begin_layout 4. Corso
Ingegneria dei Sistemi di Controllo
\end_layout

\begin_layout 5. Laureando
Filippo Guarda
\end_layout

\begin_layout 6.a Relatore
Andrea Tilli
\end_layout

\begin_layout 7. Sessione
iii
\end_layout

\begin_layout 8. Anno Accademico
2019-2020
\end_layout

\begin_layout 9. Dedica
A Giorgio, per avermi insegnato che prima viene il dovere.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frontmatter}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frontmatter}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{mainmatter}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Questi abbelliscono l'intestazione delle pagine
\end_layout

\begin_layout Plain Layout

% successive a quella di inizio capitolo.
\end_layout

\begin_layout Plain Layout


\backslash
pagestyle{fancy}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% Nomi dei capitoli in lowercase nelle intestazioni
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
chaptermark}[1]{
\end_layout

\begin_layout Plain Layout

 
\backslash
markboth{
\backslash
MakeUppercase{
\end_layout

\begin_layout Plain Layout

 
\backslash
chaptername}
\backslash
 
\backslash
thechapter.
\end_layout

\begin_layout Plain Layout

 
\backslash
 #1}{}}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[EL,OR]{
\backslash
leftmark}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[OL,EC,OC,ER]{ }
\end_layout

\end_inset


\end_layout

\begin_layout Chapter*
Introduzione
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
aggiungiAIndice{Introduzione}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
primalettera{L}
\end_layout

\end_inset

a ERC, European Rover Challenge, è una competizione a livello europeo organizzat
a dal 2014 in Polonia.
 Anche l'università di Bologna, in collaborazione con la sede di Forlì,
 partecipa a questa competizione con il gruppo AlmaX, che ha il compito
 di sviluppare un rover che rispetti le specifiche fornite nel regolamento
 
\begin_inset CommandInset citation
LatexCommand cite
key "Bogusz2020"

\end_inset

, tra cui: 
\end_layout

\begin_layout Itemize
Un peso pari o inferiore a 50kg.
\end_layout

\begin_layout Itemize
La capacità di movimento autonomo attraverso computer vision e mapping topografi
co, oltre alla possibilità di inviare comandi al rover da una base station
 via link radio.
\end_layout

\begin_layout Itemize
La capacità del rover di attraversare ostacoli e terreno accidentato simile
 al suolo marziano.
\end_layout

\begin_layout Itemize
La capacità del rover di interagire con un pannello di controllo fisico
\end_layout

\begin_layout Standard
Inserito nel contesto più ampio dello sviluppo del rover, l'argomento di
 questa tesi è il benchmark della parte di motion control.
\end_layout

\begin_layout Standard
Tutti i materiali e la documentazione inclusi in questa tesi (manuali, drivers,
 immagini, bibliografia e file lyx e latex) sono disponibili su github al
 link 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/FilippoGuarda/MotionControlAlmax
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Pipeline
\end_layout

\begin_layout Standard
L'obiettivo di questa tesi è di permettere ad una base station di controllare
 i motori BLDC a bordo del rover attraverso messaggi in cui è specificato
 un target di velocità da raggiungere, il quale viene tradotto in un comando
 leggibile dal drive che si occupa di raggiungerlo controllando il motore
 in PWM, con curve di accelerazione definite a priori.
\end_layout

\begin_layout Standard
Il drive a sua volta riceve un feedback dall'encoder del motore e deve inviare
 al computer di bordo la conferma di effettivo raggiungimento del target
 o, in alternativa, della presenza di errori.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/pipeline.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Pipeline del Motion Control
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
TODO inserire immagine
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Capitolo 1
\end_layout

\begin_layout Standard
Nel primo capitolo si analizzeranno i componenti hardware che fanno parte
 del motion control del Rover: motore, drive, adattatori e alimentatori.
\end_layout

\begin_layout Standard
Si mostrerà inoltre il corretto cablaggio degli adattatori che connettono
 il drive al computer di bordo, al motore e al PC windows necessario per
 la programmazione iniziale dei suoi parametri.
 
\end_layout

\begin_layout Section
Capitolo 2
\end_layout

\begin_layout Standard
Il secondo capitolo è dedicato ad una introduzione a ROS e CANopen, il primo
 un middleware specifico per la robotica e il secondo uno standard di comunicazi
one necessario a controllare il drive.
 
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Software
\end_layout

\begin_layout Standard
Nel terzo capitolo si elencheranno i diversi strumenti utilizzati nei successivi
 tentativi di comunicare con il drive, partendo da quelli a livello più
 alto, fino ad arrivare al candidato più promettente per eseguire un bridging
 efficace tra i messaggi di ROS e i frame CANopen.
 
\end_layout

\begin_layout Chapter
Architettura e componenti Hardware
\end_layout

\begin_layout Section
Motori BLDC 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
primalettera{O}
\end_layout

\end_inset

bbiettivo del progetto è il controllo di un motore BLDC, in questo caso
 i motori forniti sono Siboni S60 ed S40.
 Questi motori hanno le seguenti specifiche, che ci saranno utili più tardi
 per inserirle nei parametri del drive
\begin_inset CommandInset citation
LatexCommand cite
key "Siboni2020"

\end_inset

: 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tensione di alimentazione
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32V
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Potenza nominale
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
400W
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Coppia di stallo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.37Nm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Corrente di stallo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9.40A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Velocità nominale
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3000rpm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Momento di inerzia rotorico
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.30
\begin_inset Formula $kg*m^{2}x10^{-4}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Specifiche principali del motore Siboni ProPlanet S060 2B305
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
I motori dispongono di connettori di tipo molex a 6 e 12 pin, con la seguenti
 schematiche
\begin_inset CommandInset citation
LatexCommand cite
key "Microphase"

\end_inset

: 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/cavo-encoder.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Collegamento cavo encoder
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/cavo-motore.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Collegamento cavo motore
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Computer di bordo
\end_layout

\begin_layout Standard
Nel rover, il computer di bordo è una UPboard
\begin_inset CommandInset citation
LatexCommand cite
key "UPboard,UPboard2020"

\end_inset

, molto comoda in quanto estremamente modulare e dotata di moduli extra.
 Tra i muduli disponibili è presente anche uno dotato di porte seriali CAN
 e rs422, molto utile ai fini del progetto in quanto riduce il numero di
 connettori extra.
 
\end_layout

\begin_layout Standard
Per questo progetto, non essendo disponibile la UPboard è stato utilizzato
 un normale computer che utilizza linux come OS.
\end_layout

\begin_layout Section
Drive
\end_layout

\begin_layout Standard
Il drive che guida il motore in PWM è un Microphase Micro Digital One, con
 le seguenti specifiche
\begin_inset CommandInset citation
LatexCommand cite
key "Microphase2020"

\end_inset

: 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Range di tensione
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
19-84V
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Corrente nominale
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Corrente di picco
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Potenza nominale
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
580W
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Potenza di picco
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1060W
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Specifiche principali del drive MicroDigitalOne
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il drive è collegato al motore attraverso due connettori.
 Uno di potenza, attraverso cui passano le fasi della PWM, il ground e la
 linea che disattiva il freno integrato nel motore.
 L'altro responsabile della ricezione del feedback di posizione da parte
 dell'encoder incrementale e dei sensori di Hall.
 
\end_layout

\begin_layout Standard
Sul drive sono anche presenti due attacchi RJ45 che il drive usa per comunicare
 attraverso connessione seriale.
 
\end_layout

\begin_layout Section
Convertitore Moxa e adattatore PCAN
\end_layout

\begin_layout Standard
Per connettere il drive ai due computer utilizzati, uno per la programmazione
 dello stesso e uno per il controllo, si usano due connettori da usb a seriale:
\end_layout

\begin_layout Subsection
MOXA
\end_layout

\begin_layout Standard
Per programmare parametri e registri del drive è necessario utilizzare un
 software proprietario (di cui si parlerà nel dettaglio nel capitolo 2)
 che comunica attraverso una connessione seriale rs 422 resa possibile da
 un convertitore moxa.
 Il convertitore è dotato di tre led di stato: uno che indica l'accensione,
 uno che si illumina in trasmissione e uno che si illumina in ricezione.
\end_layout

\begin_layout Subsection
PCAN
\end_layout

\begin_layout Standard
Invece la comunicazione con il computer di bordo avviene su bus CAN, attraverso
 l' adattatore PCAN
\begin_inset CommandInset citation
LatexCommand cite
key "PEAK2019"

\end_inset

.
\end_layout

\begin_layout Standard
L'adattatore è dotato di un led che ne comunica lo stato: 
\end_layout

\begin_layout Itemize
LED acceso: usb connessa al computer, nessuna comunicazione
\end_layout

\begin_layout Itemize
LED lampeggia lentamente: adattatore attivo
\end_layout

\begin_layout Itemize
LED lampeggia velocemente: trasmissione in corso
\end_layout

\begin_layout Section
Adattatori
\end_layout

\begin_layout Standard
Sia il convertitore MOXA che il PCAN utilizzano per la connessione seriale
 degli attacchi DB9, di cui solo una parte dei pin è effettivamente utilizzata.
 Questo è un problema in quanto il drive dispone solo di attacchi rj45.
 Per ovviare al problema sono stati cablati a mano due adattatori.
 
\end_layout

\begin_layout Subsection
Adattatore per MOXA
\end_layout

\begin_layout Standard
Benchè dalla documentazione del convertitore moxa non venga specificato
 su quali pin passi la linea seriale rs422, nella confezione è fornito un
 attacco extra che presenta connessioni ben definite.
 Utilizzando la schematica degli attacchi RJ45 fornita nel datasheet del
 drive
\begin_inset CommandInset citation
LatexCommand cite
key "MicrophaseInterface"

\end_inset

 è stato cablato a mano un cavo ethernet con un RJ45 da un lato e cavi scoperti
 dall'altro, in modo da poterli connettere con l'attacco fornito.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/adattatore-MOXA.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Adattatore db9-rj45 insieme al MOXA
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/connessioni-moxa.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Schematica adattatore db9-rj45 per MOXA
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Adattatore per PCAN
\end_layout

\begin_layout Standard
Anche l'adattatore PCAN dispone di un attacco db9, di cui solo 4 pin vengono
 utilizzati.
 Il bus can passa attraverso i pin 2 (Can H) e 7 (Can L) questi due pin
 devono essere collegati ai pin n.
 2 e 3 dell'attacco rj45.
 Questa connessione si effettua tramite un adattatore cablabile a mano di
 facile reperibilità.
 Quello utilizzato in questo progetto nello specifico è stato acquistato
 su Amazon (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.amazon.it/gp/product/B00006IRQA/ref=ppx_yo_dt_b_asin_title_o01_s00?ie=
UTF8&psc=1
\end_layout

\end_inset

) ed ha i pin dell'attacco rj45 femmina codificati tramite i colori dei
 cavetti che vanno inseriti manualmente nell'attacco db9 femmina, secondo
 questa schematica
\begin_inset CommandInset citation
LatexCommand cite
key "PEAK2019"

\end_inset

: 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/PCAN-db9-to-rj45.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Schematica adattatore db9-rj45 per PCAN
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/adattatore-e-PCAN.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Adattatore db9-rj45 insieme al PCAN
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Alimentatori
\end_layout

\begin_layout Standard
Per il progetto servono due alimentatori separati, uno di potenza (BK precision
 9104), che alimenta il controllo PWM a 48V (nel rover l'alimentazione sarà
 fornita da una batteria a 48V) e uno riservato alla parte logica, che alimenta
 il drive a 24V.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "Cap2-software.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "Cap3-problematiche.lyx"

\end_inset


\end_layout

\begin_layout Chapter*
Conclusioni
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
aggiungiAIndice{Conclusioni}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
primalettera{C}
\end_layout

\end_inset

onfrontando le possibili opzioni, l'approccio migliore per il completamento
 del progetto sembra essere quello di sfruttare la libreria ros_canopen.
 
\end_layout

\begin_layout Standard
Il problema principale è posto dalla mancata comunicazione del computer
 di bordo con il driver, di cui non si è riuscito a trovare la causa, nonostante
 estensivi tentativi di debug.
\end_layout

\begin_layout Standard
Le particolari condizioni in cui è stato portato avanti questo progetto
 a causa del coronavirus (lavoro completamente indipendente, assenza di
 supporto da parte di personale più qualificato, adattatori "artigianali",
 mancanza di un laboratorio e strumentazione adeguata...
 ) ha sicuramente influito negativamente sui suoi risultati, ma con la riapertur
a dell'università si aprono nuove possibilità di risolvere le problematiche
 incontrate finora.
 
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/setup-hardware.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ambiente di lavoro in cui il progetto è stato portato avanti
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Debugging del connettore rj45
\end_layout

\begin_layout Standard
Durante il lockdown e nei mesi successivi, in mancanza di un oscilloscopio
 e di un analizzatore logico, è stato impossibile accertarsi che il drive
 ricevesse effettivamente i segnali inviati.
 Benchè il connettore PCAN disponga di un led che varia la frequenza di
 lampeggiamento in base alla presenza o meno di traffico sul bus, potrebbero
 esserci dei problemi di interferenza o altre complicazioni nel trasporto
 dell'informazione al drive.
 
\end_layout

\begin_layout Standard
Per prima cosa sarebbe quindi opportuno accertarsi dell'effettiva ricezione
 dei frame CAN da parte del drive, concentrandosi sul controllo a livello
 di astrazione più alto solo successivamente.
\end_layout

\begin_layout Standard
Inoltre l'adattatore PCAN smette di funzionare dopo un certo lasso di tempo,
 è da capire se il problema sia dovuto ad una incompatibilità con il sistema
 operativo o se il prodotto sia difettoso, la seconda ipotesi si può accantonare
 semplicemente utilizzando un adattatore PCAN differente, per la prima invece
 il problema sarebbe di più difficile soluzione.
 
\end_layout

\begin_layout Section
Utilizzare ros_canopen
\end_layout

\begin_layout Standard
Benchè non sia stato possibile terminare il lavoro in tempo utile, un'opzione
 è lavorare con ros_canopen.
 La documentazione è abbastanza completa, anche se ridotta, e nel caso più
 disperato sarebbe sempre possibile contattare il mantainer per chiarimenti
 sul codice sorgente.
\end_layout

\begin_layout Standard
La sintassi dei messaggi è definita nel codice sorgente di /can_msgs.
 
\end_layout

\begin_layout Standard
Configurando i parametri del drive su /canopen_chain_node e /canopen_motor_node
 e collegando correttamente il bus dovrebbe essere possibile controllare
 i singoli nodi attraverso un messaggio del tipo joint_state, o in alternativa
 un interfaccia /ros_control
\begin_inset CommandInset citation
LatexCommand cite
key "ROS2020"

\end_inset

.
\end_layout

\begin_layout Section
Utilizzare Kacanopen
\end_layout

\begin_layout Standard
Kacanopen è forse la libreria più facile da utilizzare, il suo unico problema
 è l'impossibilità di utilizzarla in sinergia con l'adattatore PEAK.
 Una soluzione possibile sarebbe di sostituire l'adattatore PEAK con un
 IXXAT usb-to-CAN FD
\begin_inset CommandInset citation
LatexCommand cite
key "IXXAT"

\end_inset

, che tra i vantaggi ha anche quello di disporre di un attacco rj45 automotive,
 senza quindi bisogno adattatori addizionali.
 
\end_layout

\begin_layout Section
If everything else fails...
\end_layout

\begin_layout Standard
Il drive Micro Digital One può essere impostato per il controllo di velocità
 analogico attraverso un segnale +-10V, con una board arduino (facilmente
 controllabile con ROS) e con un circuito di pull-up si potrebbe creare
 un prototipo funzionante, anche se molto meno affidabile e preciso, con
 poche righe di codice.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%add to index with the right hyperlink
\end_layout

\begin_layout Plain Layout


\backslash
cleardoublepage 
\backslash
phantomsection 
\backslash
addcontentsline{toc}{chapter}{Bibliografia}
\end_layout

\end_inset


\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "bibliografia"
options "alpha"

\end_inset


\end_layout

\begin_layout Chapter*
Ringraziamenti
\end_layout

\begin_layout Standard
Grazie al professor Andrea Tilli per avermi fatto da relatore nonostante
 il poco preavviso, ai ragazzi di AlmaX, in particolare a Giosuè, per avermi
 introdotto ad un progetto interessante e pieno di sfide.
\end_layout

\begin_layout Standard
Grazie ad AlmaAutomotive per aver fornito l'hardware, a Siboni per i motori,
 i drives e il software DriveWatcher.
\end_layout

\begin_layout Standard
Alla mia famiglia ed ai miei amici per il supporto continuativo nei momenti
 più frustranti, in particolare ad Adileo che in un'ora è riuscito a spiegarmi
 quello che in una settimana non avevo capito da solo.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{mainmatter}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
